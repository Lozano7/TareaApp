{"version":3,"sources":["components/TodoForm.js","components/TodoButton.js","components/TodoCard.js","components/TodoList.js","App.js","index.js"],"names":["contador","TodoForm","agregar","edit","editar","setEdit","initialFormValues","id","title","description","useState","formValue","setFormValue","error","setError","succesMessage","setSuccesMessage","handleInputChange","e","target","name","value","useEffect","onSubmit","preventDefault","trim","setTimeout","type","placeholder","className","onChange","onClick","TodoButton","params","color","text","TodoCard","todo","eliminar","TodoList","todos","length","map","ls","JSON","parse","localStorage","getItem","App","Todos","setTodos","setItem","stringify","newFormData","filter","formData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ac6cbd7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nlet contador = 0;\r\n\r\nexport const TodoForm = ({ agregar, edit, editar, setEdit }) => {\r\n  const initialFormValues = {\r\n    id: `${contador++}`,\r\n    title: '',\r\n    description: '',\r\n  };\r\n\r\n  const [formValue, setFormValue] = useState(initialFormValues);\r\n  const [error, setError] = useState(null);\r\n  const [succesMessage, setSuccesMessage] = useState(null);\r\n\r\n  const { title, description } = formValue;\r\n\r\n  const handleInputChange = (e) =>\r\n    setFormValue({ ...formValue, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title.trim() === '' || description.trim() === '') {\r\n      setError('Complete todos los campos');\r\n      return;\r\n    }\r\n    agregar(formValue);\r\n    setFormValue(initialFormValues);\r\n    setSuccesMessage('Agregado con exito');\r\n    setTimeout(() => {\r\n      setSuccesMessage(null);\r\n    }, 2000);\r\n    setError(null);\r\n  };\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    if (title.trim() === '' || description.trim() === '') {\r\n      setError('Complete todos los campos');\r\n      return;\r\n    }\r\n    editar(formValue);\r\n    setFormValue(initialFormValues);\r\n    setSuccesMessage('Editado con exito');\r\n    setTimeout(() => {\r\n      setSuccesMessage(null);\r\n    }, 2000);\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      setFormValue(edit);\r\n    } else {\r\n      setFormValue(initialFormValues);\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <>\r\n      <h1>{edit ? 'Editar Tarea' : 'Agregar Tarea'}</h1>\r\n      <form onSubmit={edit ? handleEdit : handleSubmit}>\r\n        <input\r\n          name='title'\r\n          type='text'\r\n          placeholder='Ingrese un titulo'\r\n          className='form-control'\r\n          value={title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name='description'\r\n          className='form-control mt-2'\r\n          placeholder='Ingrese una descripcion'\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        <button type='submit' className='btn btn-primary btn-block mt-2'>\r\n          {edit ? 'Editar ' : 'Agregar'}\r\n        </button>\r\n        {edit ? (\r\n          <button\r\n            type='submit'\r\n            className='btn btn-warning btn-block mt-2 ms-2'\r\n            onClick={() => {\r\n              setEdit(null);\r\n            }}\r\n          >\r\n            Cancelar Edici√≥n\r\n          </button>\r\n        ) : null}\r\n      </form>\r\n      {error ? <div className='alert alert-danger mt-2'>{error}</div> : null}\r\n      {succesMessage ? (\r\n        <div className='alert alert-success mt-2'>{succesMessage}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\n\nexport default function TodoButton(params) {\n  return (\n    <button\n      className={`btn btn-sn btn-outline-${params.color}`}\n      onClick={params.onClick}\n    >\n      {params.text}\n    </button>\n  );\n}\n","import React from 'react';\r\nimport TodoButton from './TodoButton';\r\n\r\nconst TodoCard = ({ todo, eliminar, editar }) => {\r\n  return (\r\n    <div className='card w-75 m-auto mt-4'>\r\n      <div className='card-body'>\r\n        <h3 className='card-title text-center'>{todo.title}</h3>\r\n        <p className='card-text text-center'>{todo.description}</p>\r\n        <hr />\r\n        <div className='d-flex justify-content-between'>\r\n          <TodoButton\r\n            onClick={() => editar(todo)}\r\n            text='Editar'\r\n            color='primary'\r\n            id={todo.id}\r\n          />\r\n          <TodoButton\r\n            text='Eliminar'\r\n            color='danger'\r\n            onClick={() => {\r\n              eliminar(todo.id);\r\n              editar(null);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoCard;\r\n","import React from 'react';\r\nimport TodoCard from './TodoCard';\r\nexport default function TodoList({ todos, eliminar, editar }) {\r\n  return (\r\n    <>\r\n      <h1 className='text-center'>Tareas Pendientes</h1>\r\n      {todos.length > 0 ? (\r\n        todos.map((todo) => (\r\n          <TodoCard\r\n            key={`${todo.id}+${todo.title}`}\r\n            todo={todo}\r\n            eliminar={eliminar}\r\n            editar={editar}\r\n          />\r\n        ))\r\n      ) : (\r\n        <h4 className='mt-4 text-center bg-danger text-white p-3 w-50 m-auto rounded-2'>\r\n          No hay tareas pendientes\r\n        </h4>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TodoForm } from './components/TodoForm';\r\nimport TodoList from './components/TodoList';\r\n\r\nconst ls = JSON.parse(localStorage.getItem('todos'));\r\n\r\nfunction App() {\r\n  const [Todos, setTodos] = useState(ls || []);\r\n  const [edit, setEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(Todos));\r\n  }, [Todos]);\r\n\r\n  const handleAdd = (formData) => {\r\n    setTodos([formData, ...Todos]);\r\n  };\r\n  const handleEdit = (formData) => {\r\n    const newFormData = Todos.map((todo) => {\r\n      if (todo.id === formData.id) {\r\n        todo.title = formData.title;\r\n        todo.description = formData.description;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(newFormData);\r\n  };\r\n\r\n  const handleEliminar = (id) => {\r\n    const newFormData = Todos.filter((todo) => todo.id !== id);\r\n    setTodos(newFormData);\r\n  };\r\n  return (\r\n    <div className='container mt-4'>\r\n      <div className='row'>\r\n        <div className='col-8'>\r\n          <TodoList todos={Todos} eliminar={handleEliminar} editar={setEdit} />\r\n        </div>\r\n        <div className='col-4'>\r\n          <TodoForm\r\n            agregar={handleAdd}\r\n            edit={edit}\r\n            editar={handleEdit}\r\n            setEdit={setEdit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}